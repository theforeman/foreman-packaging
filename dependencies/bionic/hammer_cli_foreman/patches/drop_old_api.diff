--- a/lib/hammer_cli_foreman/associating_commands.rb
+++ b/lib/hammer_cli_foreman/associating_commands.rb
@@ -229,23 +229,23 @@
       end
     end
 
-    module ConfigTemplate
+    module ProvisioningTemplate
       extend CommandExtension
 
-      class AddConfigTemplateCommand < HammerCLIForeman::AddAssociatedCommand
-        associated_resource :config_templates
-        desc _("Associate a configuration template")
+      class AddProvisioningTemplateCommand < HammerCLIForeman::AddAssociatedCommand
+        associated_resource :provisioning_templates
+        desc _("Associate a provisioning template")
 
-        success_message _("The configuration template has been associated.")
-        failure_message _("Could not associate the configuration template")
+        success_message _("The provisioning template has been associated.")
+        failure_message _("Could not associate the provisioning template")
       end
 
-      class RemoveConfigTemplateCommand < HammerCLIForeman::RemoveAssociatedCommand
-        associated_resource :config_templates
-        desc _("Disassociate a configuration template")
+      class RemoveProvisioningTemplateCommand < HammerCLIForeman::RemoveAssociatedCommand
+        associated_resource :provisioning_templates
+        desc _("Disassociate a provisioning template")
 
-        success_message _("The configuration template has been disassociated.")
-        failure_message _("Could not disassociate the configuration template")
+        success_message _("The provisioning template has been disassociated.")
+        failure_message _("Could not disassociate the provisioning template")
       end
     end
 
--- a/lib/hammer_cli_foreman/combination.rb
+++ b/lib/hammer_cli_foreman/combination.rb
@@ -29,8 +29,7 @@
 
       end
       build_options do |o|
-        o.expand(:all).except(:config_templates,)
-        o.without(:config_template_id)
+        o.expand(:all)
       end
 
       extend_with(HammerCLIForeman::CommandExtensions::PuppetEnvironment.new)
@@ -45,8 +44,8 @@
       end
 
       build_options do |o|
-        o.expand(:all).except(:config_templates, :hostgroups, :environments)
-        o.without(:config_template_id, :hostgroup_id, :environment_id)
+        o.expand(:all).except(:hostgroups, :environments)
+        o.without(:hostgroup_id, :environment_id)
       end
     end
 
@@ -57,8 +56,7 @@
       failure_message _("Could not update the template combination")
 
       build_options do |o|
-        o.expand(:all).except(:config_templates,)
-        o.without(:config_template_id)
+        o.expand(:all)
       end
 
       extend_with(HammerCLIForeman::CommandExtensions::PuppetEnvironment.new)
@@ -71,8 +69,7 @@
       failure_message _("Could not create the template combination")
 
       build_options do |o|
-        o.expand(:all).except(:config_templates,)
-        o.without(:config_template_id)
+        o.expand(:all)
       end
 
       extend_with(HammerCLIForeman::CommandExtensions::PuppetEnvironment.new)
--- a/lib/hammer_cli_foreman/host.rb
+++ b/lib/hammer_cli_foreman/host.rb
@@ -136,7 +136,7 @@
 
     class StatusCommand < HammerCLIForeman::SingleResourceCommand
       command_name "status"
-      action :status
+      action :get_status
 
       output do
         field :status, _("Status")
@@ -153,9 +153,10 @@
       def get_status
         params = {
           'id' => get_identifier,
+          'type' => option_type || 'configuration'
         }
-        status = resource.call(:status, params)
-        status["status"]
+        status = resource.call(:get_status, params)
+        status['status_label']
       end
 
       def get_power_status
--- a/lib/hammer_cli_foreman/location.rb
+++ b/lib/hammer_cli_foreman/location.rb
@@ -32,7 +32,7 @@
         HammerCLIForeman::References.subnets(self)
         HammerCLIForeman::References.compute_resources(self)
         HammerCLIForeman::References.media(self)
-        HammerCLIForeman::References.config_templates(self)
+        HammerCLIForeman::References.provisioning_templates(self)
         HammerCLIForeman::References.domains(self)
         HammerCLIForeman::References.environments(self)
         HammerCLIForeman::References.hostgroups(self)
@@ -117,7 +117,7 @@
     HammerCLIForeman::AssociatingCommands::ComputeResource.extend_command(self)
     HammerCLIForeman::AssociatingCommands::SmartProxy.extend_command(self)
     HammerCLIForeman::AssociatingCommands::User.extend_command(self)
-    HammerCLIForeman::AssociatingCommands::ConfigTemplate.extend_command(self)
+    HammerCLIForeman::AssociatingCommands::ProvisioningTemplate.extend_command(self)
     HammerCLIForeman::AssociatingCommands::Organization.extend_command(self)
 
     autoload_subcommands
--- a/lib/hammer_cli_foreman/operating_system.rb
+++ b/lib/hammer_cli_foreman/operating_system.rb
@@ -26,13 +26,13 @@
           custom_field Fields::Reference
         end
         collection :os_default_templates, _("Default templates"), :numbered => false do
-          custom_field Fields::Template, :id_key => :config_template_id, :name_key => :config_template_name
+          custom_field Fields::Template, :id_key => :provisioning_template_id, :name_key => :provisioning_template_name
         end
         collection :architectures, _("Architectures"), :numbered => false do
           custom_field Fields::Reference
         end
         HammerCLIForeman::References.media(self)
-        HammerCLIForeman::References.config_templates(self)
+        HammerCLIForeman::References.provisioning_templates(self)
         HammerCLIForeman::References.parameters(self)
       end
 
@@ -99,15 +99,15 @@
       resource :os_default_templates
 
       option "--id", "OS ID", _("Operatingsystem id"), :required => true, :referenced_resource => 'operatingsystem'
-      option "--config-template-id", "TPL ID", _("Config template id to be set"), :required => true
+      option "--provisioning-template-id", "TPL ID", _("Provisioning template id to be set"), :required => true
 
 
-      success_message _("[%{config_template_name}] was set as default %{template_kind_name} template.")
+      success_message _("[%{provisioning_template_name}] was set as default %{template_kind_name} template.")
       failure_message _("Could not set the os default template")
 
       def option_type_name
         tpl = HammerCLIForeman.collection_to_common_format(
-          HammerCLIForeman.foreman_resource!(:config_templates).call(:show, {"id" => option_config_template_id}))
+          HammerCLIForeman.foreman_resource!(:provisioning_templates).call(:show, {"id" => option_provisioning_template_id}))
         tpl[0]["template_kind_name"]
       end
 
@@ -124,7 +124,7 @@
         params = {
           "id" => tpl["id"],
           "os_default_template" => {
-            "config_template_id" => option_config_template_id,
+            "provisioning_template_id" => option_provisioning_template_id,
             "template_kind_id" => tpl["template_kind_id"]
           }
         }.merge base_action_params
@@ -135,8 +135,8 @@
       def create_default_template(tpl_kind_name)
         params = {
           "os_default_template" => {
-            "config_template_id" => option_config_template_id,
-            "template_kind_name" => tpl_kind_name
+            "provisioning_template_id" => option_provisioning_template_id,
+            "provisioning_kind_name" => tpl_kind_name
           }
         }.merge base_action_params
 
@@ -165,7 +165,7 @@
       resource :os_default_templates
 
       option "--id", "OS ID", _("Operatingsystem id"), :required => true, :referenced_resource => 'operatingsystem'
-      option "--type", "TPL TYPE", _("Type of the config template"), :required => true
+      option "--type", "TPL TYPE", _("Type of the provisioning template"), :required => true
 
       success_message _("Default template deleted.")
       failure_message _("Could not delete the default template")
@@ -196,7 +196,7 @@
 
 
     HammerCLIForeman::AssociatingCommands::Architecture.extend_command(self)
-    HammerCLIForeman::AssociatingCommands::ConfigTemplate.extend_command(self)
+    HammerCLIForeman::AssociatingCommands::ProvisioningTemplate.extend_command(self)
     HammerCLIForeman::AssociatingCommands::PartitionTable.extend_command(self)
 
 
--- a/lib/hammer_cli_foreman/organization.rb
+++ b/lib/hammer_cli_foreman/organization.rb
@@ -32,7 +32,7 @@
         HammerCLIForeman::References.subnets(self)
         HammerCLIForeman::References.compute_resources(self)
         HammerCLIForeman::References.media(self)
-        HammerCLIForeman::References.config_templates(self)
+        HammerCLIForeman::References.provisioning_templates(self)
         HammerCLIForeman::References.domains(self)
         HammerCLIForeman::References.environments(self)
         HammerCLIForeman::References.hostgroups(self)
@@ -119,7 +119,7 @@
     HammerCLIForeman::AssociatingCommands::ComputeResource.extend_command(self)
     HammerCLIForeman::AssociatingCommands::SmartProxy.extend_command(self)
     HammerCLIForeman::AssociatingCommands::User.extend_command(self)
-    HammerCLIForeman::AssociatingCommands::ConfigTemplate.extend_command(self)
+    HammerCLIForeman::AssociatingCommands::ProvisioningTemplate.extend_command(self)
     HammerCLIForeman::AssociatingCommands::Location.extend_command(self)
 
     autoload_subcommands
--- a/lib/hammer_cli_foreman/references.rb
+++ b/lib/hammer_cli_foreman/references.rb
@@ -80,9 +80,9 @@
       end
     end
 
-    def self.config_templates(dsl)
+    def self.provisioning_templates(dsl)
       dsl.build do
-        collection :config_templates, _("Templates"), :numbered => false do
+        collection :provisioning_templates, _("Templates"), :numbered => false do
           custom_field Fields::Template
         end
       end
--- a/lib/hammer_cli_foreman/smart_class_parameter.rb
+++ b/lib/hammer_cli_foreman/smart_class_parameter.rb
@@ -61,7 +61,7 @@
         field :description, _("Description")
         field :parameter_type, _("Type")
         field :hidden_value?, _("Hidden Value?")
-        field :use_puppet_default, _("Use puppet default"), Fields::Boolean
+        field :omit, _("Omit"), Fields::Boolean
         field :required, _("Required")
 
         label _("Validator") do
@@ -78,7 +78,7 @@
               field :id, _('Id')
               field :match, _('Match')
               field :value, _('Value')
-              field :use_puppet_default, _('Use puppet default'), Fields::Boolean
+              field :omit, _('Omit'), Fields::Boolean
           end
         end
         HammerCLIForeman::References.environments(self)
@@ -87,7 +87,7 @@
 
       def extend_data(res)
         res['parameter_type'] ||= 'string'
-        res['use_puppet_default'] ||= false
+        res['omit'] ||= false
         res
       end
 
@@ -156,8 +156,8 @@
       end
 
       validate_options do
-        if option(:option_use_puppet_default).value
-          option(:option_value).rejected(:msg => _('Cannot use --value when --use-puppet-default is true.'))
+        if option(:option_omit).value
+          option(:option_value).rejected(:msg => _('Cannot use --value when --omit is true.'))
         end
 
         if option(:option_smart_class_parameter_name).exist?
--- a/lib/hammer_cli_foreman/template.rb
+++ b/lib/hammer_cli_foreman/template.rb
@@ -2,7 +2,7 @@
 
   class Template < HammerCLIForeman::Command
 
-    resource :config_templates
+    resource :provisioning_templates
 
     module TemplateCreateUpdateCommons
 
