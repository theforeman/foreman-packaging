#!/usr/bin/env ruby

require 'optparse'
require 'fileutils'

options = {}
optparse = OptionParser.new do |opts|
  opts.banner = """
  This script is used to remove all Katello related packages and services.
  This should only be used if you are sure you are wanting to completly remove Katello from this machine and lose all of your settings and synced content.\n
  """

  opts.on('-y', '--assume-yes', 'Remove without confirmation') do
    options[:unattended] = true
  end
  opts.parse!
end

# Define colors we can use for stdout messages
def important(message)
  "\033[31m#{message}\033[0m"
end

def info(message)
  "\033[32m#{message}\033[0m"
end

def warn(message)
  "\033[33m#{message}\33[0m"
end

CONFIG_FILES = [
  '/etc/candlepin',
  '/etc/default/pulp_workers.rpmsave',
  '/etc/foreman-installer',
  '/etc/foreman-proxy',
  '/etc/foreman',
  '/etc/hammer',
  '/etc/httpd',
  '/etc/opt/rh/rh-mongodb34/mongod.conf',
  '/etc/opt/theforeman',
  '/etc/pki/katello-certs-tools',
  '/etc/pulp',
  '/etc/puppetlabs',
  '/etc/qpid-dispatch',
  '/etc/qpid',
  '/etc/squid',
  '/etc/sudoers.d/foreman-proxy',
  '/etc/sysconfig/foreman.rpmsave',
  '/etc/sysconfig/puppetserver.rpmsave',
  '/etc/tomcat'
]

LOG_FILES = [
  '/var/log/candlepin',
  '/var/log/capsule-certs-generate*',
  '/var/log/foreman-installer',
  '/var/log/foreman-maintain',
  '/var/log/foreman-proxy',
  '/var/log/foreman-selinux-install.log',
  '/var/log/foreman',
  '/var/log/httpd',
  '/var/log/mongodb',
  '/var/log/pulp',
  '/var/log/puppetlabs',
  '/var/log/squid',
  '/var/log/tomcat'
]

RPMS = [
  'puppetlabs-release',
  'foreman-release',
  'foreman-client',
  'foreman-proxy',
  'candlepin',
  'katello',
  '^pulp',
  '^python-pulp',
  '^pulp-',
  'mongo',
  'postgre',
  '^mod_',
  '^rubygem',
  '^tfm',
  '^foreman',
  '^qpid',
  '^python-crane',
  '^python-celery',
  '^python-gofer',
  '^python-qpid',
  '^python-kombu',
  '^python-webpy',
  '^python-nectar',
  '^python-saslwrapper',
  '^python-amqp',
  '^python-billiard',
  '^python-semantic_version',
  '^python-requests',
  '^python-isodate',
  '$HOSTNAME',
  'saslwrapper',
  'ruby',
  'rubygems',
  'httpd',
  'puppet',
  'tomcat',
  'squid'
]

CERT_FILES = [
  '/etc/pki/ca-trust/source/anchors/katello_server-host-cert.crt',
  '/etc/pki/katello',
  '/etc/pki/pulp',
  '/root/ssl-build',
  '/var/www/html/pub/katello-ca*',
  '/var/www/html/pub/katello-rhsm-consumer',
  '/var/www/html/pub/katello-server-ca.crt'
]

CONTENT = [
  '/opt/puppetlabs',
  '/opt/theforeman',
  '/root/.cache/apipie_bindings',
  '/root/.hammer',
  '/usr/lib/pulp',
  '/usr/libexec/foreman-proxy',
  '/usr/share/candlepin',
  '/usr/share/foreman-installer-katello',
  '/usr/share/foreman-installer',
  '/usr/share/foreman-proxy',
  '/usr/share/foreman',
  '/usr/share/katello-installer-base',
  '/usr/share/katello',
  '/usr/share/pulp',
  '/usr/share/puppet',
  '/usr/share/qpid-tools',
  '/usr/share/qpid',
  '/usr/share/tomcat',
  '/var/cache/',
  '/var/lib/candlepin',
  '/var/lib/foreman-maintain',
  '/var/lib/foreman',
  '/var/lib/katello',
  '/var/lib/puppet',
  '/var/lib/qpidd',
  '/var/lib/tomcat',
  '/var/opt/theforeman',
  '/var/tmp/foreman-proxy'
]

MOUNTS = [
  '/var/lib/mongodb',
  '/var/lib/pgsql',
  '/var/lib/pulp'
]

CONTENT.map! do |dir|
  if File.readlines('/proc/mounts').any? { |line| line.split(' ')[1] =~ /#{dir}$/ }
    dir + '/*'
  else
    dir
  end
end

def remove
  puts warn("\nStopping services")
  `foreman-maintain service stop`

  puts warn("\nRemoving RPMs")
  packages = []
  RPMS.each do |rpm|
    rpmpackages = `rpm -qa | grep "#{rpm}"`
    packages += rpmpackages.lines.map(&:chomp)
  end
  `yum erase -y #{packages.join(' ')} > /dev/null 2>&1`

  puts warn("\nCleaning up configuration files")
  FileUtils.rm_r Dir.glob(CONFIG_FILES)

  puts warn("\nCleaning up log files")
  # Logs
  FileUtils.rm_r Dir.glob(LOG_FILES)

  puts warn("\nCleaning up certs")
  # Cert stuff
  FileUtils.rm_r Dir.glob(CERT_FILES)

  puts warn("\nCleaning up content")
  # Content
  FileUtils.rm_r Dir.glob(CONTENT)

  puts warn("\nRemoving Databases and Pulp storage on Filesystem")
  # Check and see if MOUNTS are mounted filesystems.
  MOUNTS.each do |mount|
    `mountpoint -q #{mount}`
    if $?.success?
      puts important("\n #{mount} is part of a mounted filesystem, skipping. You will need to remove #{mount} manually.")
    else
      FileUtils.rm_r Dir.glob(mount)
    end
  end

  puts info("\nFinished")
end

def confirmed?
  puts "\nARE YOU SURE?: This script permanently deletes data and configurations."
  puts important("\nType [remove] to continue ")
  gets.chomp == 'remove'
end

def check?
  puts "\nWARNING: This script will erase many packages and config files."
  puts "Important packages such as the following will be removed:\n"
  puts '  * httpd (apache)'
  puts '  * mongodb'
  puts '  * tomcat'
  puts '  * puppet'
  puts '  * ruby'
  puts '  * rubygems'
  puts "  * All Katello and Foreman Packages\n"
  puts 'Once these packages and configuration files are removed there is no going back.'
  puts 'If you use this system for anything other than Katello and Foreman you probably'
  puts "do not want to execute this script.\n"
  puts important("\nRead the source at /usr/sbin/katello-remove for a list of what is removed.  Are you sure(Y/N) ")

  response = gets.chomp
  /[Y]/i.match(response)
end

if options[:unattended] || (check? && confirmed?)
  puts warn("\nStarting removal")
  remove
else
  puts important('**cancelled**')
end
