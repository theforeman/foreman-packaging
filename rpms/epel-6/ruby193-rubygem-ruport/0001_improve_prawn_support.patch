diff --git a/Rakefile b/Rakefile
index 78c9da9..fceb01a 100644
--- a/Rakefile
+++ b/Rakefile
@@ -34,6 +34,7 @@ begin
     gemspec.rdoc_options = ['--title', 'Ruport Documentation', '--main', 'README.rdoc', '-q']
     gemspec.add_dependency 'fastercsv'
     gemspec.add_dependency 'pdf-writer', '= 1.1.8'
+    gemspec.add_dependency 'prawn',  '= 0.12.0'
   end
 rescue LoadError
   puts "Jeweler gem not available."
diff --git a/examples/pdf_table_prawn.rb b/examples/pdf_table_prawn.rb
new file mode 100644
index 0000000..4ad1bce
--- /dev/null
+++ b/examples/pdf_table_prawn.rb
@@ -0,0 +1,30 @@
+$: << File.join(File.dirname(__FILE__), '..', 'lib')
+
+require "ruport"
+
+table = Ruport::Data::Table.new(
+          :column_names => %w(Make Model Year Class),
+          :data => [
+            %w(Nissan Skyline 1989 B),
+            %w(Mercedes-Benz 500SL 2005 A),
+            %w(Kia Sinatra 2008 C)
+        ])
+
+pdf_options = { :pdf_format => {
+                  :page_layout => :portrait,
+                  :page_size => "LETTER",
+                  },
+                :table_format => {
+                  :cell_style => { :size => 8},
+                  :row_colors => ["FFFFFF","F0F0F0"],
+                  :column_widths => {
+                    0 => 100,
+                    1 => 100,
+                    2 => 50,
+                    3 => 40
+                    }
+                  },
+                :file => 'pdf_table_prawn.pdf'
+                }
+
+table.to_prawn_pdf(pdf_options)
\ No newline at end of file
diff --git a/lib/ruport/controller.rb b/lib/ruport/controller.rb
index f8bedbf..ab9f742 100644
--- a/lib/ruport/controller.rb
+++ b/lib/ruport/controller.rb
@@ -170,11 +170,9 @@ class Ruport::Controller
       unless self.class.controller.formats.include?(format)
         raise UnknownFormatError
       end
-      self.class.controller.render(format,
-        self.class.rendering_options.merge(options)) do |rend|
-          rend.data =
-            respond_to?(:renderable_data) ? renderable_data(format) : self
-          yield(rend) if block_given?  
+      self.class.controller.render(format, self.class.rendering_options.merge(options)) do |rend|
+          rend.data = respond_to?(:renderable_data) ? renderable_data(format,options) : self
+          yield(rend) if block_given?
       end
     end      
     
@@ -221,6 +219,7 @@ class Ruport::Controller
      { :html => Ruport::Formatter::HTML,
        :csv  => Ruport::Formatter::CSV,
        :pdf  => Ruport::Formatter::PDF,
+       :pdf_prawn => Ruport::Formatter::PrawnPDF,
        :text => Ruport::Formatter::Text }
     end

diff --git a/lib/ruport/formatter/pdf.rb b/lib/ruport/formatter/pdf.rb
index 97f5eef..7832044 100644
--- a/lib/ruport/formatter/pdf.rb
+++ b/lib/ruport/formatter/pdf.rb
@@ -276,6 +276,7 @@ module Ruport
     #
     # http://stonecode.svnrepository.com/ruport/trac.cgi/wiki/PdfWriterQuickRef
     def draw_table(table_data, format_opts={})
+
       m = "PDF Formatter requires column_names to be defined"
       raise FormatterError, m if table_data.column_names.empty?

@@ -392,6 +393,7 @@ module Ruport
     private

     def apply_pdf_table_column_opts(table,table_data,format_opts)
+
       column_opts = format_opts.delete(:column_options)

       if column_opts
diff --git a/lib/ruport/formatter/prawn_pdf.rb b/lib/ruport/formatter/prawn_pdf.rb
index e5e6b6b..8a2be6b 100644
--- a/lib/ruport/formatter/prawn_pdf.rb
+++ b/lib/ruport/formatter/prawn_pdf.rb
@@ -16,16 +16,30 @@ module Ruport
     end

     def pdf
-      @pdf ||= (options.formatter || ::Prawn::Document.new())
+      @pdf ||= (options.formatter ||
+        ::Prawn::Document.new(options[:pdf_format] || {:page_size => "LETTER",
+          :page_layout => :portrait} ))
     end

-    def draw_table(table)
+    def draw_table(table, format_opts={})
+
+      m = "PDF Formatter requires column_names to be defined"
+      raise FormatterError, m if table.column_names.empty?
+
+      table.rename_columns { |c| c.to_s }

       table_array = [table.column_names]
       table_array += table_to_array(table)
-      pdf.table(table_array) do
-        style row(0), :font_style => :bold
+      table_array.map { |array| array.map! { |elem| elem.class != String ? elem.to_s : elem }}
+
+      if options[:table_format]
+        opt = options[:table_format]
+      else
+        opt = {}
       end
+
+      pdf.table(table_array,opt)
+
     end

     def table_to_array(tbl)
diff --git a/ruport.gemspec b/ruport.gemspec
index 94ddd82..f55b07b 100644
--- a/ruport.gemspec
+++ b/ruport.gemspec
@@ -154,13 +154,16 @@ Gem::Specification.new do |s|
     if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
       s.add_runtime_dependency(%q<fastercsv>, [">= 0"])
       s.add_runtime_dependency(%q<pdf-writer>, ["= 1.1.8"])
+      s.add_runtime_dependency(%q<prawn>, ["= 0.12.0"])
     else
       s.add_dependency(%q<fastercsv>, [">= 0"])
       s.add_dependency(%q<pdf-writer>, ["= 1.1.8"])
+      s.add_runtime_dependency(%q<prawn>, ["= 0.12.0"])
     end
   else
     s.add_dependency(%q<fastercsv>, [">= 0"])
     s.add_dependency(%q<pdf-writer>, ["= 1.1.8"])
+    s.add_runtime_dependency(%q<prawn>, ["= 0.12.0"])
   end
 end
