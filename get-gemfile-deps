#!/usr/bin/env ruby
require 'bundler'
require 'json'
filename = ARGV.shift || 'Gemfile'

HEADER = ARGV.shift || 'specfile'
EXCLUDED_GROUPS = [:test, :development]
EXCLUDED_REQUIRES = {
  'BuildRequires' => [],
  'Requires' => ['activerecord-nulldb-adapter']
}

def build_requirement(dependency)
  name = "rubygem(#{dependency.name})"

  requirements = []

  dependency.requirement.requirements.each do |op, version|
    if op == '~>'
      requirements << "#{name} >= #{version}" << "#{name} < #{version.bump}.0"
    elsif op == '>=' && version.to_s == '0'
      # handled later
    elsif op != '!=' # != is not supported in RPM
      requirements << "#{name} #{op} #{version}"
    end
  end

  case requirements.length
  when 0
    name
  when 1
    requirements.first
  else
    "(#{requirements.join(' with ')})"
  end
end

unless File.file?(filename)
  STDERR.puts "File #{filename} is not an existing file"
  exit 1
end

bundler = Dir.chdir(File.dirname(filename)) do
  Bundler.load
end

requires = Hash.new { |h, k| h[k] = {} }

bundler.dependencies.each do |dependency|
  dependency.groups.each do |group|
    next if EXCLUDED_GROUPS.include?(group)

    ['BuildRequires', 'Requires'].each do |req|
      next if EXCLUDED_REQUIRES[req].include?(dependency.name)

      requires[group][req] = [] unless requires[group].key?(req)
      requires[group][req] << build_requirement(dependency)
    end
  end
end


requires.each do |group, reqs|
  reqs.each do |req, lines|
    puts "# start #{HEADER} #{group} #{req}"
    lines.each do |line|
      puts "#{req}: #{line}"
    end
    puts "# end #{HEADER} #{group} #{req}"
  end
end
